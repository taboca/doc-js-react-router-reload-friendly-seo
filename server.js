'use strict';

const express    = require('express');
const path       = require('path');
const fs         = require('fs');
const app        = express();

const React      = require('react');
const ReactApp   = require('./src/AppPage.js');

app.get('/page-static', function (req, res, next) {
  // This is the challenge - to get the html file, generated in the build
  // and to append nodes of content in it?

  // or to react string- render from a component?

  // or to just generate HTML and somehow find the filename of the main.js generated by babel?
  // For example, if you "npm run build" you will see that webpack generates outputs such as
  /*
      47.59 KB  build/static/js/main.f95bdb9c.js
      299 B     build/static/css/main.c17080f1.css
  */

});

app.get('/page', function (req, res, next) {
  var options = {
    root: __dirname + '/build/',
  };

  var fileName = 'index.html';
  res.sendFile(fileName, options, function (err) {
    if (err) {
      next(err);
    } else {
      console.log('Sent:', fileName);
    }
  });
});

app.use('/', express.static(path.join(__dirname, 'build')));

const PORT = process.env.PORT || 8080;
app.listen(process.env.PORT || 8080, () => {
  console.log(`App listening on port ${PORT}`);
  console.log('Press Ctrl+C to quit.');
});

module.exports = app;
